#BlueJ class context
comment0.target=DorasGreatMapAdventure
comment1.params=type
comment1.target=DorasGreatMapAdventure(java.lang.String)
comment1.text=\r\n\ \ \ Thou\ shall\ not\ modify\ the\ constructor.\r\n\ \ \ Modify\ the\ constructor\ of\ iAmTheMap\ may\ cause\ you\ other\ methods\ to\ fail\ toString()\ testing\r\n
comment10.params=
comment10.target=java.lang.Object[]\ toArray()
comment10.text=\r\n\ \ \ \ \ \ returns\ an\ array\ containing\ all\ elements\ from\ the\ associated\ sets\r\n\ \ \ \ \ \ items\ may\ appear\ in\ the\ array\ more\ than\ once\r\n\ \ \ \ \ \ keys\ are\ not\ to\ be\ added\ to\ the\ array\r\n
comment11.params=key\ tico
comment11.target=void\ remove(java.lang.Object,\ java.lang.Object)
comment11.text=\r\n\ \ \ \ \ \ if\ tico\ is\ in\ the\ Set\ associate\ with\ key\r\n\ \ \ \ \ \ \ \ \ \ remove\ tico\ from\ the\ set\ associated\ with\ key.\r\n\ \ \ \ \ \ \ \ \ \ if\ the\ Set\ becomes\ Empty,\ remove\ the\ key\ from\ iAmTheMap\r\n\ \ \ \ \ \ otherwise\ (tico\ is\ not\ in\ the\ Set)\ \r\n\ \ \ \ \ \ \ \ \ \ -\ do\ not\ throw\ an\ exception,\ that\ is\ exit\ the\ method\ gracefully\r\n
comment12.params=isa
comment12.target=void\ removeFromAll(java.lang.Object)
comment12.text=\r\n\ \ \ \ \ \ remove\ isa\ from\ all\ sets\r\n\ \ \ \ \ \ \ \ \ \ if\ the\ Set\ becomes\ Empty,\ remove\ the\ key\ from\ iAmTheMap\r\n
comment13.params=otherDorasGreatMapAdventure
comment13.target=boolean\ equals(java.lang.Object)
comment13.text=\r\n\ \ \ \ \ \ Every\ key\ in\ this.iAmTheMap\ is\ a\ key\ in\ otherDorasGreatMapAdventure.iAMTheMap\r\n\ \ \ \ \ \ Every\ key\ in\ otherDorasGreatMapAdventure.iAmTheMap\ is\ a\ key\ in\ this.iAMTheMap\r\n\ \ \ \ \ \ Each\ pair\ of\ set\ for\ a\ given\ key\ are\ equal\r\n\ \ \ \ \ \ \ \ \ \ \ that\ is,\ \ iAmTheMap.get(key).equals(otherDorasGreatMapAdventure.iAmTheMap.get(key))\r\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\r\n\ \ \ \ \ \ The\ String\ should\ be\ of\ the\ form\:\r\n\ \ \ \ \ \ "{key.toString()\=iAmThemap.get(key).toString(),\ <repeat\ for\ all\ keys>}\r\n\ \ \ \ \ \ a\ single\ \=\ between\ key\ and\ set,\ with\ a\ comma\ and\ a\ single\ space\ between\ each\ key\ set\ pair\r\n
comment15.params=
comment15.target=java.lang.Object\ maxItem()
comment15.text=\r\n\ \ \ \ \ \ Finds\ the\ largest\ value\ in\ all\ the\ sets\ contained\ in\ the\ map.\r\n\ \ \ \ \ \ You\ should\ assume\ that\ all\ Sets\ contain\ comparable\ items\r\n\ \ \ \ \ \ and\ that\ all\ sets\ are\ Comparable\ to\ each\ other\r\n\ \ \ \ \ \ DorasGreatMapAdventure\ is\ NOT\ empty\r\n
comment2.params=
comment2.target=java.util.Set\ keySet()
comment2.text=\r\n\ \ \ \ \ \ returns\ the\ set\ of\ keys\ from\ iAmTheMap\r\n\ \ \ \ \ \ I\ know,\ I\ gave\ it\ to\ you.\r\n
comment3.params=
comment3.target=java.util.Map\ getMap()
comment3.text=\r\n\ \ \ \ \ \ returns\ iAmTheMap\ -\ Just\ in\ case\ there\ is\ a\ DorasGreatMapAdventureTheSequel\r\n\ \ \ \ \ \ I\ know,\ I\ gave\ it\ to\ you.\r\n
comment4.params=key\ tico
comment4.target=void\ add(java.lang.Object,\ java.lang.Object)
comment4.text=\r\n\ \ \ \ \ \ add\ tico\ to\ the\ set\ associated\ with\ key.\r\n\ \ \ \ \ \ If\ key\ is\ not\ in\ iAmTheMap,\ add\ a\ new\ TreeSet\ containg\ tico\ as\ its\ sole\ member\r\n\r\n\ \ \ \ yes\ -\ add\ a\ TREE\ set\ to\ insure\ matching\ traversal\ order\ \r\n\r\n\r\n
comment5.params=
comment5.target=int\ size()
comment5.text=\r\n\ \ \ \ \ \ returns\ the\ total\ number\ of\ items\ in\ the\ iAmTheMap\r\n\ \ \ \ \ \ That\ is,\ the\ sum\ of\ the\ size\ of\ each\ set\ assocaiated\ with\ all\ keys\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ plus\ the\ number\ of\ keys\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ redundant\ items\ are\ counted\ multiple\ times.\r\n
comment6.params=
comment6.target=int\ numItems()
comment6.text=\r\n\ \ \ \ \ \ returns\ the\ total\ number\ of\ non\ key\ items\ in\ the\ iAmTheMap\r\n\ \ \ \ \ \ That\ is,\ the\ sum\ of\ the\ size\ of\ each\ set\ assocaiated\ with\ all\ keys\r\n
comment7.params=
comment7.target=int\ numDistinctItems()
comment7.text=\r\n\ \ \ \ \ \ returns\ the\ total\ number\ of\ distinct\ non\ key\ items\ in\ the\ iAmTheMap\r\n\ \ \ \ \ \ That\ is,\ the\ sum\ of\ the\ size\ of\ each\ set\ assocaiated\ with\ all\ keys,\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ not\ counting\ duplicates\r\n
comment8.params=
comment8.target=boolean\ isEmpty()
comment8.text=\r\n\ \ \ \ \ \ returns\ true\ iff\r\n\ \ \ \ \ \ \ \ \ \ \ iAmTheMap\ is\ Empty\ or\ all\ sets\ in\ the\ Map\ are\ Empty\r\n\ \ \ \ \ \ otherwise\ returns\ false\r\n
comment9.params=diego
comment9.target=boolean\ contains(java.lang.Object)
comment9.text=\r\n\ \ \ \ \ \ returns\ true\ if\ a\ one\ or\ more\ associated\ set\ contains\ diego\r\n\ \ \ \ \ \ otherwise\ (no\ set\ contains\ diego)\ return\ false\r\n\ \ \ \ \ \ \r\n
numComments=16
